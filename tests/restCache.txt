
          /\      |‾‾| /‾‾/   /‾‾/   
     /\  /  \     |  |/  /   /  /    
    /  \/    \    |     (   /   ‾‾\  
   /          \   |  |\  \ |  (‾)  | 
  / __________ \  |__| \__\ \_____/ .io

     execution: local
        script: rest/tests/restCache.js
        output: json (tests/restCache.json)

     scenarios: (100.00%) 1 scenario, 10000 max VUs, 45s max duration (incl. graceful stop):
              * cache_scenario: Up to 10000 looping VUs for 15s over 2 stages (gracefulRampDown: 30s, exec: cache, gracefulStop: 30s)


running (00.7s), 01331/10000 VUs, 955 complete and 0 interrupted iterations
cache_scenario   [   4% ] 01332/10000 VUs  00.7s/15.0s

running (01.7s), 03331/10000 VUs, 5430 complete and 0 interrupted iterations
cache_scenario   [  11% ] 03332/10000 VUs  01.7s/15.0s
time="2024-09-10T18:40:34+02:00" level=warning msg="The test has generated metrics with 102886 unique time series, which is higher than the suggested limit of 100000 and could cause high memory usage. Consider not using high-cardinality values like unique IDs as metric tags or, if you need them in the URL, use the name metric tag or URL grouping. See https://grafana.com/docs/k6/latest/using-k6/tags-and-groups/ for details." component=metrics-engine-ingester

running (02.7s), 05330/10000 VUs, 12737 complete and 0 interrupted iterations
cache_scenario   [  18% ] 05331/10000 VUs  02.7s/15.0s

running (03.7s), 07331/10000 VUs, 22830 complete and 0 interrupted iterations
cache_scenario   [  24% ] 07332/10000 VUs  03.7s/15.0s
time="2024-09-10T18:40:35+02:00" level=warning msg="The test has generated metrics with 204964 unique time series, which is higher than the suggested limit of 100000 and could cause high memory usage. Consider not using high-cardinality values like unique IDs as metric tags or, if you need them in the URL, use the name metric tag or URL grouping. See https://grafana.com/docs/k6/latest/using-k6/tags-and-groups/ for details." component=metrics-engine-ingester

running (04.7s), 09330/10000 VUs, 34970 complete and 0 interrupted iterations
cache_scenario   [  31% ] 09330/10000 VUs  04.7s/15.0s
time="2024-09-10T18:40:37+02:00" level=warning msg="The test has generated metrics with 403405 unique time series, which is higher than the suggested limit of 100000 and could cause high memory usage. Consider not using high-cardinality values like unique IDs as metric tags or, if you need them in the URL, use the name metric tag or URL grouping. See https://grafana.com/docs/k6/latest/using-k6/tags-and-groups/ for details." component=metrics-engine-ingester

running (05.7s), 10000/10000 VUs, 47407 complete and 0 interrupted iterations
cache_scenario   [  38% ] 10000/10000 VUs  05.7s/15.0s

running (06.7s), 10000/10000 VUs, 55162 complete and 0 interrupted iterations
cache_scenario   [  44% ] 10000/10000 VUs  06.7s/15.0s

running (07.7s), 10000/10000 VUs, 70116 complete and 0 interrupted iterations
cache_scenario   [  51% ] 10000/10000 VUs  07.7s/15.0s

running (08.7s), 10000/10000 VUs, 86342 complete and 0 interrupted iterations
cache_scenario   [  58% ] 10000/10000 VUs  08.7s/15.0s
time="2024-09-10T18:40:40+02:00" level=warning msg="The test has generated metrics with 810655 unique time series, which is higher than the suggested limit of 100000 and could cause high memory usage. Consider not using high-cardinality values like unique IDs as metric tags or, if you need them in the URL, use the name metric tag or URL grouping. See https://grafana.com/docs/k6/latest/using-k6/tags-and-groups/ for details." component=metrics-engine-ingester

running (09.7s), 10000/10000 VUs, 101845 complete and 0 interrupted iterations
cache_scenario   [  64% ] 10000/10000 VUs  09.7s/15.0s

running (10.7s), 10000/10000 VUs, 114766 complete and 0 interrupted iterations
cache_scenario   [  71% ] 10000/10000 VUs  10.7s/15.0s

running (11.7s), 10000/10000 VUs, 130333 complete and 0 interrupted iterations
cache_scenario   [  78% ] 10000/10000 VUs  11.7s/15.0s

running (12.7s), 10000/10000 VUs, 142334 complete and 0 interrupted iterations
cache_scenario   [  84% ] 10000/10000 VUs  12.7s/15.0s

running (13.7s), 10000/10000 VUs, 158935 complete and 0 interrupted iterations
cache_scenario   [  91% ] 10000/10000 VUs  13.7s/15.0s

running (14.7s), 10000/10000 VUs, 175058 complete and 0 interrupted iterations
cache_scenario   [  98% ] 10000/10000 VUs  14.7s/15.0s

running (15.4s), 00000/10000 VUs, 187064 complete and 0 interrupted iterations
cache_scenario ✓ [ 100% ] 00000/10000 VUs  15s

     █ cache

     data_received..................: 70 MB  4.5 MB/s
     data_sent......................: 70 MB  4.6 MB/s
     group_duration.................: avg=683.15ms min=180.63ms med=609.93ms max=1.34s    p(90)=892.8ms  p(95)=985.75ms
     http_req_blocked...............: avg=11.61µs  min=237ns    med=951ns    max=48.36ms  p(90)=1.99µs   p(95)=2.97µs  
     http_req_connecting............: avg=8.53µs   min=0s       med=0s       max=48.33ms  p(90)=0s       p(95)=0s      
     http_req_duration..............: avg=227.55ms min=7.07ms   med=197.82ms max=713.21ms p(90)=351.98ms p(95)=444.01ms
       { expected_response:true }...: avg=227.55ms min=7.07ms   med=197.82ms max=713.21ms p(90)=351.98ms p(95)=444.01ms
     http_req_failed................: 0.00%  ✓ 0            ✗ 561192 
     http_req_receiving.............: avg=33.67µs  min=4.93µs   med=12.64µs  max=32.84ms  p(90)=27.93µs  p(95)=70.47µs 
     http_req_sending...............: avg=11.12µs  min=1.5µs    med=4.95µs   max=25.58ms  p(90)=9.64µs   p(95)=17.55µs 
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s       max=0s       p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=227.5ms  min=6.9ms    med=197.79ms max=713.19ms p(90)=351.95ms p(95)=443.95ms
     http_reqs......................: 561192 36376.859745/s
     iteration_duration.............: avg=683.17ms min=180.65ms med=609.95ms max=1.34s    p(90)=892.83ms p(95)=985.76ms
     iterations.....................: 187064 12125.619915/s
     vus............................: 10000  min=1571       max=10000
     vus_max........................: 10000  min=10000      max=10000


running (15.4s), 00000/10000 VUs, 187064 complete and 0 interrupted iterations
cache_scenario ✓ [ 100% ] 00000/10000 VUs  15s
